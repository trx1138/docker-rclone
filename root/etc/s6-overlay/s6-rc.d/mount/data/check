#!/usr/bin/with-contenv bash
. /usr/local/bin/variables

if ! findmnt "$rclone_mountpoint" | grep -q fuse.rclone; then
    exit 1
fi

# post-check
if [[ -n "${RCLONE_REFRESH_ON_MOUNT:-}" ]]; then
    # In case of mounting google drive which includes shortcuts pointing to another drives, 
    # it sometimes fails to refresh some of directories on the first run 
    # and hence may need to be done again.
    for ((i=1;i<=RCLONE_REFRESH_ON_MOUNT_REPEAT;i++)); do
        sleep 5
        rclone_refresh "$RCLONE_REFRESH_ON_MOUNT"
    done
fi

if [ "$POOLING_FS" = "mergerfs" ]; then
    IFS=" " read -r -a mfs_user_opts <<< "$MFS_USER_OPTS"

    mount_command="mergerfs ${mfs_branches} /data -o ${mfs_basic_opts} -o ${mfs_user_opts}"
    echo "*** pooling => $mount_command"
    exec $mount_command
fi

if [ "$POOLING_2ND" = "mergerfs" ]; then
    IFS=" " read -r -a mfs_user_opts <<< "$MFS_USER_OPTS"

    mount_command2="mergerfs ${mfs_branches2} /data2 -o ${mfs_basic_opts} -o ${mfs_user_opts}"
    echo "*** pooling => $mount_command2"
    exec $mount_command2
fi

if [ "$POOLING_FS" = "unionfs" ]; then
    IFS=" " read -r -a ufs_user_opts <<< "$UFS_USER_OPTS"

    mount_command="unionfs ${ufs_branches} /data -o ${ufs_basic_opts} -o ${ufs_user_opts}"
    echo "*** pooling => $mount_command"
    exec $mount_command
fi

if [ "$POOLING_2ND" = "unionfs" ]; then
    IFS=" " read -r -a ufs_user_opts <<< "$UFS_USER_OPTS"

    mount_command2="unionfs ${ufs_branches2} /data2 -o ${ufs_basic_opts} -o ${ufs_user_opts}"
    echo "*** pooling => $mount_command2"
    exec $mount_command2
fi

exit 0
